#! /usr/bin/env python3

import sys
import numpy as np

import matplotlib as mpl
from matplotlib import rc
import matplotlib.pyplot as plt

from crewp.lodestar.stdout import get_poissonbox

stdoutf = 'out.000'
potf = 'potential.dat'

# get grid size of Poisson Box
(nx, ny, nz) = get_poissonbox(stdoutf)
# load charge data 
grid_chrg = np.loadtxt(potf,) 
# reshape to adapt the contour plot
x_mesh = grid_chrg[:,0].reshape(nx, ny)
y_mesh = grid_chrg[:,1].reshape(nx, ny)
chrg = grid_chrg[:,2].reshape(nx, ny)

mpl.rcParams.update({'font.size': 20,
                     'font.family': "serif",
                     #'figure.figsize': (nx,ny),
                     #'font.serif': [],                   
                     #'font.sans-serif': ["DejaVu Sans"], 
                     'mathtext.default' : 'regular',
                    })

try:
    lowerlim = float(sys.argv[1])
    upperlim = float(sys.argv[2])
except IndexError:
    lowerlim = chrg.min()
    upperlim = chrg.max()

fig = plt.figure()
ax = fig.add_subplot(1,1,1,)

cmap= 'coolwarm'   # 'coolwarm'
color_arry = np.linspace(lowerlim, upperlim, 100, endpoint=True)
#tick_arry = np.arange(0., upperlim, 0.01, )

charge_contour = ax.contourf( x_mesh, y_mesh, chrg, color_arry, cmap=cmap, extend='both', ) #vmin=-.5, vmax=5.5, ) 
cbar = plt.colorbar(charge_contour, ax=ax, orientation='horizontal', ) #ticks=tick_arry, )

ax.set_xlabel(r'$x \: (Å)$',)
ax.set_ylabel(r'$y \: (Å)$',)

plt.show()
